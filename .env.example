# INT Smart Triage AI 2.0 - Environment Variables Template
# Copy this file to .env and fill in your actual values

# =============================================================================
# REQUIRED - Supabase Configuration (Backend/API)
# =============================================================================
# Your Supabase project URL (e.g., https://xxxxx.supabase.co)
SUPABASE_URL=your_supabase_project_url

# Supabase Service Role Key (KEEP SECRET - server-side only)
# This key bypasses RLS and should NEVER be exposed to the client
SUPABASE_SERVICE_ROLE_KEY=your_supabase_service_role_key

# =============================================================================
# REQUIRED - Environment
# =============================================================================
# Environment: development, production, or test
NODE_ENV=production

# =============================================================================
# OPTIONAL - Frontend Configuration (Client-side)
# =============================================================================
# These are used by Vite for client-side Supabase access
# The ANON key is safe to expose to clients as RLS protects the database
VITE_SUPABASE_URL=your_supabase_project_url
VITE_SUPABASE_ANON_KEY=your_supabase_anon_key

# =============================================================================
# OPTIONAL - Additional Services
# =============================================================================
# Add any additional service API keys here as needed
# Examples:
# SENDGRID_API_KEY=your_sendgrid_key
# SLACK_WEBHOOK_URL=your_slack_webhook
# TWILIO_ACCOUNT_SID=your_twilio_sid
# TWILIO_AUTH_TOKEN=your_twilio_token

# =============================================================================
# SECURITY NOTES
# =============================================================================
# 1. NEVER commit the actual .env file to version control
# 2. Store production secrets in Vercel's environment variables dashboard
# 3. Rotate keys regularly and after any suspected compromise
# 4. Use different keys for development, staging, and production
# 5. The Service Role Key should only be used server-side (API routes)
